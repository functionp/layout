
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x8e\xf0\x98\x96\xec)\x19\x87\x01\xdbR\t\xed\x02?\x93'
    
_lr_action_items = {'CONT':([13,21,27,38,39,43,49,52,55,58,61,81,82,84,85,87,88,93,96,115,116,124,130,131,137,141,143,144,147,148,150,151,152,],[-5,-74,30,-15,-17,-35,-33,-74,30,30,-23,-32,30,-34,30,-24,-36,-16,-22,30,30,30,30,30,-20,-18,-31,-30,30,-29,-19,30,-21,]),'EQUAL':([50,],[78,]),'EGT':([31,37,40,42,47,50,57,59,65,66,97,98,99,100,101,102,103,104,109,111,121,122,128,],[-61,-58,-64,72,-70,-69,-66,-53,-65,-69,-63,-62,72,72,-55,-57,-54,-56,-71,-68,-59,-60,-67,]),'WHILE':([13,21,27,38,39,43,49,52,55,58,61,81,82,84,85,87,88,93,96,115,116,124,130,131,137,141,143,144,147,148,150,151,152,],[-5,-74,34,-15,-17,-35,-33,-74,34,34,-23,-32,34,-34,34,-24,-36,-16,-22,34,34,34,34,34,-20,-18,-31,-30,34,-29,-19,34,-21,]),'CONSTANT':([13,21,27,35,36,38,39,43,48,49,52,55,58,61,62,63,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,87,88,90,91,92,93,96,115,116,124,125,126,129,130,131,137,141,143,144,146,147,148,150,151,152,],[-5,-74,47,47,47,-15,-17,-35,47,-33,-74,47,47,-23,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-32,47,47,-34,47,-24,-36,47,47,47,-16,-22,47,47,47,47,47,47,47,47,-20,-18,-31,-30,47,47,-29,-19,47,-21,]),'MINUS':([13,21,27,31,35,36,37,38,39,40,43,47,48,49,50,52,55,57,58,59,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,87,88,90,91,92,93,96,97,98,101,102,103,104,109,111,115,116,121,122,124,125,126,128,129,130,131,137,141,143,144,146,147,148,150,151,152,],[-5,-74,36,-61,36,36,-58,-15,-17,-64,-35,-70,36,-33,-69,-74,36,-66,36,91,-23,36,36,-65,-69,36,36,36,36,36,36,36,36,36,36,36,36,36,-32,36,36,-34,36,-24,-36,36,36,36,-16,-22,-63,-62,91,91,91,91,-71,-68,36,36,-59,-60,36,36,36,-67,36,36,36,-20,-18,-31,-30,36,36,-29,-19,36,-21,]),'RBRACE':([13,21,38,39,43,49,52,55,58,61,81,84,85,86,87,88,89,93,96,115,116,118,119,120,131,132,133,134,137,141,142,143,144,148,150,152,],[-5,26,-15,-17,-35,-33,81,-75,-75,-23,-32,-34,-75,-75,-24,-36,-75,-16,-22,-75,-75,-75,135,136,-75,143,144,145,-20,-18,148,-31,-30,-29,-19,-21,]),'RPAREN':([11,14,15,19,20,23,29,31,32,33,37,40,41,42,44,47,50,54,57,59,65,66,77,79,94,95,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,114,117,121,122,123,127,128,139,140,146,149,],[-74,17,-8,24,-12,-14,-13,-61,-40,-44,-58,-64,-48,-50,-42,-70,-69,-46,-66,-53,-65,-69,109,111,-47,124,-63,-62,-52,-51,-55,-57,-54,-56,-37,-38,127,-71,-45,-68,-72,128,130,-49,-59,-60,-41,-43,-67,-39,-73,-76,151,]),'SEMICOLON':([6,8,9,13,15,16,21,27,30,31,32,33,37,38,39,40,41,42,43,44,47,49,50,52,54,55,56,57,58,59,60,61,64,65,66,75,81,82,84,85,87,88,93,94,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,115,116,117,121,122,123,124,125,127,128,130,131,137,138,139,141,143,144,147,148,150,151,152,],[-8,-6,13,-5,-8,-7,-74,38,61,-61,-40,-44,-58,-15,-17,-64,-48,-50,-35,-42,-70,-33,-69,-74,-46,38,87,-66,38,-53,93,-23,96,-65,-69,-76,-32,38,-34,38,-24,-36,-16,-47,-22,-63,-62,-52,-51,-55,-57,-54,-56,-37,125,-38,-71,-45,-68,38,38,-49,-59,-60,-41,38,-76,-43,-67,38,38,-20,146,-39,-18,-31,-30,38,-29,-19,38,-21,]),'LT':([31,37,40,42,47,50,57,59,65,66,97,98,99,100,101,102,103,104,109,111,121,122,128,],[-61,-58,-64,73,-70,-69,-66,-53,-65,-69,-63,-62,73,73,-55,-57,-54,-56,-71,-68,-59,-60,-67,]),'COMMA':([6,8,9,15,16,19,20,23,29,31,32,33,37,40,41,42,44,47,50,54,57,59,60,64,65,66,75,77,94,95,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,117,121,122,123,125,127,128,138,139,140,146,149,],[-8,-6,12,-8,-7,25,-12,-14,-13,-61,-40,-44,-58,-64,-48,-50,-42,-70,-69,-46,-66,-53,92,92,-65,-69,-76,92,-47,92,-63,-62,-52,-51,-55,-57,-54,-56,-37,126,-38,-71,-45,-68,-72,129,92,-49,-59,-60,-41,-76,-43,-67,126,-39,-73,-76,126,]),'PLUS':([31,37,40,47,50,57,59,65,66,97,98,101,102,103,104,109,111,121,122,128,],[-61,-58,-64,-70,-69,-66,90,-65,-69,-63,-62,90,90,90,90,-71,-68,-59,-60,-67,]),'IDENTIFIER':([3,12,13,18,21,27,35,36,38,39,43,48,49,52,53,55,58,61,62,63,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,87,88,90,91,92,93,96,115,116,124,125,126,129,130,131,137,141,143,144,146,147,148,150,151,152,],[6,15,-5,15,-74,50,50,66,-15,-17,-35,50,-33,-74,15,50,50,-23,66,50,66,66,66,66,66,66,66,66,50,50,50,50,50,-32,50,66,-34,50,-24,-36,66,66,50,-16,-22,50,50,50,50,50,50,50,50,-20,-18,-31,-30,50,50,-29,-19,50,-21,]),'$end':([1,2,4,5,10,13,22,26,28,135,136,145,],[-1,-4,0,-3,-2,-5,-10,-28,-9,-27,-26,-25,]),'GT':([31,37,40,42,47,50,57,59,65,66,97,98,99,100,101,102,103,104,109,111,121,122,128,],[-61,-58,-64,71,-70,-69,-66,-53,-65,-69,-63,-62,71,71,-55,-57,-54,-56,-71,-68,-59,-60,-67,]),'DIVIDE':([31,37,40,47,50,57,65,66,97,98,109,111,121,122,128,],[-61,67,-64,-70,-69,-66,-65,-69,-63,-62,-71,-68,67,67,-67,]),'FOR':([13,21,27,38,39,43,49,52,55,58,61,81,82,84,85,87,88,93,96,115,116,124,130,131,137,141,143,144,147,148,150,151,152,],[-5,-74,45,-15,-17,-35,-33,-74,45,45,-23,-32,45,-34,45,-24,-36,-16,-22,45,45,45,45,45,-20,-18,-31,-30,45,-29,-19,45,-21,]),'TIMES':([31,37,40,47,50,57,65,66,97,98,109,111,121,122,128,],[-61,68,-64,-70,-69,-66,-65,-69,-63,-62,-71,-68,68,68,-67,]),'LPAREN':([6,7,13,21,27,34,35,36,38,39,43,45,46,48,49,50,51,52,55,58,61,62,63,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,87,88,90,91,92,93,96,115,116,124,125,126,129,130,131,137,141,143,144,146,147,148,150,151,152,],[-11,11,-5,-74,48,63,48,48,-15,-17,-35,75,76,48,-33,79,80,-74,48,48,-23,48,48,79,48,48,48,48,48,48,48,48,48,48,48,48,48,-32,48,48,-34,48,-24,-36,48,48,48,-16,-22,48,48,48,48,48,48,48,48,-20,-18,-31,-30,48,48,-29,-19,48,-21,]),'ELSE':([38,39,61,81,87,93,96,137,141,143,144,148,150,152,],[-15,-17,-23,-32,-24,-16,-22,-20,147,-31,-30,-29,-19,-21,]),'EQUALCOMP':([31,37,40,41,42,47,50,57,59,65,66,97,98,99,100,101,102,103,104,109,111,117,121,122,128,],[-61,-58,-64,70,-50,-70,-69,-66,-53,-65,-69,-63,-62,-52,-51,-55,-57,-54,-56,-71,-68,70,-59,-60,-67,]),'ELT':([31,37,40,42,47,50,57,59,65,66,97,98,99,100,101,102,103,104,109,111,121,122,128,],[-61,-58,-64,74,-70,-69,-66,-53,-65,-69,-63,-62,74,74,-55,-57,-54,-56,-71,-68,-59,-60,-67,]),'IF':([13,21,27,38,39,43,49,52,55,58,61,81,82,84,85,87,88,93,96,115,116,124,130,131,137,141,143,144,147,148,150,151,152,],[-5,-74,51,-15,-17,-35,-33,-74,51,51,-23,-32,51,-34,51,-24,-36,-16,-22,51,51,51,51,51,-20,-18,-31,-30,51,-29,-19,51,-21,]),'AND':([31,37,40,41,42,47,50,54,57,59,65,66,94,97,98,99,100,101,102,103,104,109,111,117,121,122,128,],[-61,-58,-64,-48,-50,-70,-69,83,-66,-53,-65,-69,83,-63,-62,-52,-51,-55,-57,-54,-56,-71,-68,-49,-59,-60,-67,]),'RETURN':([13,21,27,38,39,43,49,52,55,58,61,81,82,84,85,87,88,93,96,115,116,124,130,131,137,141,143,144,147,148,150,151,152,],[-5,-74,35,-15,-17,-35,-33,-74,35,35,-23,-32,35,-34,35,-24,-36,-16,-22,35,35,35,35,35,-20,-18,-31,-30,35,-29,-19,35,-21,]),'LBRACE':([13,17,21,24,27,38,39,43,49,52,55,58,61,81,82,84,85,87,88,93,96,115,116,124,130,131,137,141,143,144,147,148,150,151,152,],[-5,21,-74,21,52,-15,-17,-35,-33,-74,52,52,-23,-32,52,-34,52,-24,-36,-16,-22,52,52,52,52,52,-20,-18,-31,-30,52,-29,-19,52,-21,]),'INT':([0,1,2,4,5,10,11,13,14,21,22,25,26,27,28,49,52,55,82,84,115,135,136,145,],[3,-1,-4,3,-3,-2,-74,-5,18,-74,-10,18,-28,53,-9,-33,-74,53,53,-34,53,-27,-26,-25,]),'BREAK':([13,21,27,38,39,43,49,52,55,58,61,81,82,84,85,87,88,93,96,115,116,124,130,131,137,141,143,144,147,148,150,151,152,],[-5,-74,56,-15,-17,-35,-33,-74,56,56,-23,-32,56,-34,56,-24,-36,-16,-22,56,56,56,56,56,-20,-18,-31,-30,56,-29,-19,56,-21,]),'NOT':([13,21,27,35,38,39,43,48,49,52,55,58,61,63,75,80,81,82,84,85,87,88,92,93,96,115,116,124,125,126,130,131,137,141,143,144,146,147,148,150,151,152,],[-5,-74,46,46,-15,-17,-35,46,-33,-74,46,46,-23,46,46,46,-32,46,-34,46,-24,-36,46,-16,-22,46,46,46,46,46,46,46,-20,-18,-31,-30,46,46,-29,-19,46,-21,]),'EQUALNOT':([31,37,40,41,42,47,50,57,59,65,66,97,98,99,100,101,102,103,104,109,111,117,121,122,128,],[-61,-58,-64,69,-50,-70,-69,-66,-53,-65,-69,-63,-62,-52,-51,-55,-57,-54,-56,-71,-68,69,-59,-60,-67,]),'OR':([31,33,37,40,41,42,47,50,54,57,59,65,66,94,97,98,99,100,101,102,103,104,109,111,117,121,122,128,],[-61,62,-58,-64,-48,-50,-70,-69,-46,-66,-53,-65,-69,-47,-63,-62,-52,-51,-55,-57,-54,-56,-71,-68,-49,-59,-60,-67,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'unary_expr':([27,35,36,48,55,58,62,63,67,68,69,70,71,72,73,74,75,76,78,79,80,82,83,85,90,91,92,115,116,124,125,126,129,130,131,146,147,151,],[31,31,65,31,31,31,31,31,97,98,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'declaration':([0,4,27,55,82,115,],[5,5,49,84,49,84,]),'logical_or_expr':([27,35,48,55,58,63,75,76,78,79,80,82,85,92,115,116,124,125,126,129,130,131,146,147,151,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'external_declaration':([0,4,],[1,10,]),'mult_expr':([27,35,48,55,58,62,63,69,70,71,72,73,74,75,76,78,79,80,82,83,85,90,91,92,115,116,124,125,126,129,130,131,146,147,151,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,121,122,37,37,37,37,37,37,37,37,37,37,37,37,]),'compound_statement':([27,55,58,82,85,115,116,124,130,131,147,151,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'postfix_expr':([27,35,36,48,55,58,62,63,67,68,69,70,71,72,73,74,75,76,78,79,80,82,83,85,90,91,92,115,116,124,125,126,129,130,131,146,147,151,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'equality_expr':([27,35,48,55,58,62,63,75,76,78,79,80,82,83,85,92,115,116,124,125,126,129,130,131,146,147,151,],[41,41,41,41,41,41,41,41,41,41,41,41,41,117,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'relational_expr':([27,35,48,55,58,62,63,69,70,75,76,78,79,80,82,83,85,92,115,116,124,125,126,129,130,131,146,147,151,],[42,42,42,42,42,42,42,99,100,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'program':([0,],[4,]),'assign_expr':([27,35,48,55,58,63,75,76,78,79,80,82,85,92,115,116,124,125,126,129,130,131,146,147,151,],[44,44,44,44,44,44,44,108,110,112,44,44,44,44,44,44,44,44,44,140,44,44,44,44,44,]),'statement':([27,55,58,82,85,115,116,124,130,131,147,151,],[43,43,88,43,88,43,88,137,141,88,150,152,]),'lev_dec':([55,58,85,86,89,115,116,118,131,],[86,89,118,119,120,132,133,134,142,]),'empty':([75,125,146,],[105,105,105,]),'func_compound_statement':([17,24,],[22,28,]),'parameter_type_list':([14,],[19,]),'parameter_declaration':([14,25,],[20,29,]),'argument_expression_list':([79,],[113,]),'not_expr':([27,35,48,55,58,63,75,80,82,85,92,115,116,124,125,126,130,131,146,147,151,],[32,32,32,32,32,32,107,32,32,32,123,32,32,32,107,139,32,32,107,32,32,]),'declarator_list':([3,53,],[9,9,]),'function_definition':([0,4,],[2,2,]),'for_expression':([75,125,146,],[106,138,149,]),'function_declarator':([3,],[7,]),'logical_and_expr':([27,35,48,55,58,62,63,75,76,78,79,80,82,85,92,115,116,124,125,126,129,130,131,146,147,151,],[54,54,54,54,54,94,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'declaration_list':([27,82,],[55,115,]),'primary_expr':([27,35,36,48,55,58,62,63,67,68,69,70,71,72,73,74,75,76,78,79,80,82,83,85,90,91,92,115,116,124,125,126,129,130,131,146,147,151,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'declarator':([3,12,18,53,],[8,16,23,8,]),'statement_list':([27,55,82,115,],[58,85,116,131,]),'add_expr':([27,35,48,55,58,62,63,69,70,71,72,73,74,75,76,78,79,80,82,83,85,92,115,116,124,125,126,129,130,131,146,147,151,],[59,59,59,59,59,59,59,59,59,101,102,103,104,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'lev_inc':([11,21,52,],[14,27,82,]),'expression':([27,35,48,55,58,63,80,82,85,115,116,124,130,131,147,151,],[60,64,77,60,60,95,114,60,60,60,60,60,60,60,60,60,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> external_declaration','program',1,'p_program','tc_yacc.py',18),
  ('program -> program external_declaration','program',2,'p_program','tc_yacc.py',19),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','tc_yacc.py',28),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','tc_yacc.py',29),
  ('declaration -> INT declarator_list SEMICOLON','declaration',3,'p_declaration','tc_yacc.py',34),
  ('declarator_list -> declarator','declarator_list',1,'p_declarator_list','tc_yacc.py',39),
  ('declarator_list -> declarator_list COMMA declarator','declarator_list',3,'p_declarator_list','tc_yacc.py',40),
  ('declarator -> IDENTIFIER','declarator',1,'p_declarator','tc_yacc.py',48),
  ('function_definition -> INT function_declarator LPAREN lev_inc parameter_type_list RPAREN func_compound_statement','function_definition',7,'p_function_definition','tc_yacc.py',54),
  ('function_definition -> INT function_declarator LPAREN lev_inc RPAREN func_compound_statement','function_definition',6,'p_function_definition','tc_yacc.py',55),
  ('function_declarator -> IDENTIFIER','function_declarator',1,'p_function_declarator','tc_yacc.py',64),
  ('parameter_type_list -> parameter_declaration','parameter_type_list',1,'p_parameter_type_list','tc_yacc.py',69),
  ('parameter_type_list -> parameter_type_list COMMA parameter_declaration','parameter_type_list',3,'p_parameter_type_list','tc_yacc.py',70),
  ('parameter_declaration -> INT declarator','parameter_declaration',2,'p_parameter_declaration','tc_yacc.py',79),
  ('statement -> SEMICOLON','statement',1,'p_statement','tc_yacc.py',85),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','tc_yacc.py',86),
  ('statement -> compound_statement','statement',1,'p_statement','tc_yacc.py',87),
  ('statement -> IF LPAREN expression RPAREN statement','statement',5,'p_statement','tc_yacc.py',88),
  ('statement -> IF LPAREN expression RPAREN statement ELSE statement','statement',7,'p_statement','tc_yacc.py',89),
  ('statement -> WHILE LPAREN expression RPAREN statement','statement',5,'p_statement','tc_yacc.py',90),
  ('statement -> FOR LPAREN for_expression SEMICOLON for_expression SEMICOLON for_expression RPAREN statement','statement',9,'p_statement','tc_yacc.py',91),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_statement','tc_yacc.py',92),
  ('statement -> CONT SEMICOLON','statement',2,'p_statement','tc_yacc.py',93),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement','tc_yacc.py',94),
  ('func_compound_statement -> LBRACE lev_inc declaration_list statement_list lev_dec lev_dec RBRACE','func_compound_statement',7,'p_func_compound_statement','tc_yacc.py',120),
  ('func_compound_statement -> LBRACE lev_inc statement_list lev_dec lev_dec RBRACE','func_compound_statement',6,'p_func_compound_statement','tc_yacc.py',121),
  ('func_compound_statement -> LBRACE lev_inc declaration_list lev_dec lev_dec RBRACE','func_compound_statement',6,'p_func_compound_statement','tc_yacc.py',122),
  ('func_compound_statement -> LBRACE RBRACE','func_compound_statement',2,'p_func_compound_statement','tc_yacc.py',123),
  ('compound_statement -> LBRACE lev_inc declaration_list statement_list lev_dec RBRACE','compound_statement',6,'p_compound_statement','tc_yacc.py',133),
  ('compound_statement -> LBRACE lev_inc statement_list lev_dec RBRACE','compound_statement',5,'p_compound_statement','tc_yacc.py',134),
  ('compound_statement -> LBRACE lev_inc declaration_list lev_dec RBRACE','compound_statement',5,'p_compound_statement','tc_yacc.py',135),
  ('compound_statement -> LBRACE RBRACE','compound_statement',2,'p_compound_statement','tc_yacc.py',136),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','tc_yacc.py',146),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','tc_yacc.py',147),
  ('statement_list -> statement','statement_list',1,'p_statement_list','tc_yacc.py',155),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','tc_yacc.py',156),
  ('for_expression -> empty','for_expression',1,'p_for_expression','tc_yacc.py',164),
  ('for_expression -> not_expr','for_expression',1,'p_for_expression','tc_yacc.py',165),
  ('for_expression -> for_expression COMMA not_expr','for_expression',3,'p_for_expression','tc_yacc.py',166),
  ('expression -> not_expr','expression',1,'p_expression','tc_yacc.py',174),
  ('expression -> expression COMMA not_expr','expression',3,'p_expression','tc_yacc.py',175),
  ('not_expr -> assign_expr','not_expr',1,'p_not_expr','tc_yacc.py',183),
  ('not_expr -> NOT LPAREN assign_expr RPAREN','not_expr',4,'p_not_expr','tc_yacc.py',184),
  ('assign_expr -> logical_or_expr','assign_expr',1,'p_assign_expr','tc_yacc.py',192),
  ('assign_expr -> IDENTIFIER EQUAL assign_expr','assign_expr',3,'p_assign_expr','tc_yacc.py',193),
  ('logical_or_expr -> logical_and_expr','logical_or_expr',1,'p_logical_or_expr','tc_yacc.py',201),
  ('logical_or_expr -> logical_or_expr OR logical_and_expr','logical_or_expr',3,'p_logical_or_expr','tc_yacc.py',202),
  ('logical_and_expr -> equality_expr','logical_and_expr',1,'p_logical_and_expr','tc_yacc.py',210),
  ('logical_and_expr -> logical_and_expr AND equality_expr','logical_and_expr',3,'p_logical_and_expr','tc_yacc.py',211),
  ('equality_expr -> relational_expr','equality_expr',1,'p_equality_expr','tc_yacc.py',218),
  ('equality_expr -> equality_expr EQUALCOMP relational_expr','equality_expr',3,'p_equality_expr','tc_yacc.py',219),
  ('equality_expr -> equality_expr EQUALNOT relational_expr','equality_expr',3,'p_equality_expr','tc_yacc.py',220),
  ('relational_expr -> add_expr','relational_expr',1,'p_relational_expr','tc_yacc.py',230),
  ('relational_expr -> relational_expr LT add_expr','relational_expr',3,'p_relational_expr','tc_yacc.py',231),
  ('relational_expr -> relational_expr GT add_expr','relational_expr',3,'p_relational_expr','tc_yacc.py',232),
  ('relational_expr -> relational_expr ELT add_expr','relational_expr',3,'p_relational_expr','tc_yacc.py',233),
  ('relational_expr -> relational_expr EGT add_expr','relational_expr',3,'p_relational_expr','tc_yacc.py',234),
  ('add_expr -> mult_expr','add_expr',1,'p_add_expr','tc_yacc.py',248),
  ('add_expr -> add_expr PLUS mult_expr','add_expr',3,'p_add_expr','tc_yacc.py',249),
  ('add_expr -> add_expr MINUS mult_expr','add_expr',3,'p_add_expr','tc_yacc.py',250),
  ('mult_expr -> unary_expr','mult_expr',1,'p_mult_expr','tc_yacc.py',261),
  ('mult_expr -> mult_expr TIMES unary_expr','mult_expr',3,'p_mult_expr','tc_yacc.py',262),
  ('mult_expr -> mult_expr DIVIDE unary_expr','mult_expr',3,'p_mult_expr','tc_yacc.py',263),
  ('unary_expr -> postfix_expr','unary_expr',1,'p_unary_expr','tc_yacc.py',273),
  ('unary_expr -> MINUS unary_expr','unary_expr',2,'p_unary_expr','tc_yacc.py',274),
  ('postfix_expr -> primary_expr','postfix_expr',1,'p_postfix_expr','tc_yacc.py',283),
  ('postfix_expr -> IDENTIFIER LPAREN argument_expression_list RPAREN','postfix_expr',4,'p_postfix_expr','tc_yacc.py',284),
  ('postfix_expr -> IDENTIFIER LPAREN RPAREN','postfix_expr',3,'p_postfix_expr','tc_yacc.py',285),
  ('primary_expr -> IDENTIFIER','primary_expr',1,'p_primary_expr','tc_yacc.py',303),
  ('primary_expr -> CONSTANT','primary_expr',1,'p_primary_expr','tc_yacc.py',304),
  ('primary_expr -> LPAREN expression RPAREN','primary_expr',3,'p_primary_expr','tc_yacc.py',305),
  ('argument_expression_list -> assign_expr','argument_expression_list',1,'p_argument_expression_list','tc_yacc.py',315),
  ('argument_expression_list -> argument_expression_list COMMA assign_expr','argument_expression_list',3,'p_argument_expression_list','tc_yacc.py',316),
  ('lev_inc -> <empty>','lev_inc',0,'p_lev_inc','tc_yacc.py',324),
  ('lev_dec -> <empty>','lev_dec',0,'p_lev_dec','tc_yacc.py',330),
  ('empty -> <empty>','empty',0,'p_empty','tc_yacc.py',351),
]
